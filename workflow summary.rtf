{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Semibold;\f1\fnil\fcharset0 .SFNS-Regular;\f2\fnil\fcharset0 HelveticaNeue-Bold;
\f3\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;\f4\fswiss\fcharset0 Helvetica;\f5\fnil\fcharset0 .SFNS-RegularItalic;
\f6\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;}
{\*\expandedcolortbl;;\cssrgb\c6700\c6700\c6700;}
\paperw11900\paperh16840\margl1440\margr1440\vieww26540\viewh16580\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs44 \cf2 What we have now
\f1\b0\fs28 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 1) Altitude-based thermal detection
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Goal:
\f1\b0 \cf2  find climbs from the vertical trace only.\
	\'95	
\f2\b \cf2 How it works:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Smooth GPS altitude \uc0\u8594  compute climb rate (m/s).\
	\'95	Start a climb when rate \uc0\u8805  
\f3 A_MIN_RATE_MPS
\f1 .\
	\'95	End a climb when rate drops below 0 (or stalls out).\
	\'95	Keep segments with 
\f3 duration \uc0\u8805  A_MIN_DUR_S
\f1  and 
\f3 gain \uc0\u8805  A_MIN_GAIN_M
\f1 .\
	\'95	
\f2\b Valley merge (\'93big blue thermals\'94):
\f1\b0  if the descent between two climbs is shallow (
\f3 ALT_DROP_M
\f1  and/or 
\f3 ALT_DROP_FRAC
\f1 ), merge them into a single long thermal.\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Outputs:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Side-view altitude plot with climb segments highlighted.\
	\'95	Map plot (v2+) with orange \uc0\u10005  markers for thermal centers (T#).\
	\'95	CSV like 
\f3 outputs/altitude_clusters_*.csv
\f1  with 
\f3 thermal_id
\f1 , 
\f3 lat_mid
\f1 , 
\f3 lon_mid
\f1 , 
\f3 gain_m
\f1 , 
\f3 duration_s
\f1 , timestamps.\
	\'95	Debug txt with parameter echo and counts.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f2\b \cf2 Key knobs (alt):
\f1\b0 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 A_SMOOTH_S
\f1  (smoothing window, s)\
	\'95	
\f3 A_MIN_RATE_MPS
\f1  (min avg climb to start a thermal)\
	\'95	
\f3 A_MIN_DUR_S
\f1 , 
\f3 A_MIN_GAIN_M
\f1  (minimums to keep)\
	\'95	
\f3 A_ALT_DROP_M
\f1 , 
\f3 A_ALT_DROP_FRAC
\f1  (valley merge thresholds)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 2) Circles-based thermalling detection
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Goal:
\f1\b0 \cf2  find thermalling from 
\f2\b \cf2 turning behaviour
\f1\b0 \cf2  (circling).\
	\'95	
\f2\b \cf2 How it works (current core):
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Compute headings per fix, smooth a little, take signed heading deltas.\
	\'95	Accumulate arc until ~360\'b0 worth of turn is covered.\
	\'95	
\f2\b One-sidedness
\f1\b0 : require mostly same-sign deltas (left 
\f5\i or
\f1\i0  right) \uc0\u8594  rejects snakes.\
	\'95	
\f2\b Guardrails
\f1\b0  (applied 
\f2\b before
\f1\b0  clustering):\
\pard\tqr\tx900\tx1060\li1060\fi-800\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b Turn rate
\f1\b0  (deg/s) in a plausible band.\
	\'95	
\f2\b Radius
\f1\b0  estimate (m) in a plausible band.\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Outputs:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Map plot with 
\f2\b green \uc0\u10005 
\f1\b0  for individual circles (midpoints).\
	\'95	CSV like 
\f3 outputs/circles_*.csv
\f1  with 
\f3 turn_rate_deg_s
\f1 , 
\f3 radius_m_est
\f1 , 
\f3 start/end_time
\f1 , etc.\
	\'95	Debug txt with cadence, counts, parameters.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f2\b \cf2 Key knobs (circles):
\f1\b0 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Detection: 
\f3 C_MIN_ARC_DEG
\f1 , 
\f3 C_MIN_DIR_RATIO
\f1 , 
\f3 C_SMOOTH_S
\f1 , 
\f3 C_MAX_WIN_SAMPLES
\f1 \
	\'95	
\f2\b \cf2 Guardrails:
\f1\b0 \cf2  
\f3 TURN_MIN_DEG_S
\f1 , 
\f3 TURN_MAX_DEG_S
\f1 , 
\f3 RADIUS_MIN_M
\f1 , 
\f3 RADIUS_MAX_M
\f1 \
\
\pard\tx860\tx1420\tx1980\tx2540\tx3100\tx3660\tx4220\tx4780\tx5340\tx5900\tx6460\tx7020\li300\sl324\slmult1\partightenfactor0
\cf2 We learned your IGC cadence is ~
\f2\b 3 s/fix
\f1\b0 , so thresholds interact strongly with that. Stricter guardrails \uc0\u8594  fewer circles.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 3) Circle clustering (black \uc0\u10005 )
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Goal:
\f1\b0 \cf2  group nearby circles into thermals.\
	\'95	
\f2\b \cf2 How it works:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	DBSCAN-style neighbourhood using 
\f2\b spatial epsilon
\f1\b0  (
\f3 CLUSTER_EPS_M
\f1 ) and 
\f2\b temporal bridge
\f1\b0  (
\f3 CLUSTER_GAP_S
\f1 ).\
	\'95	Weighted centroid per cluster (weight ~ 1/radius) to avoid big-radius bias.\
	\'95	Keep clusters with size \uc0\u8805  
\f3 MIN_CLUSTER_SIZE
\f1  (otherwise shown as faint grey or dropped, depending on script).\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Outputs:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Black \uc0\u10005  markers sized by 
\f3 n
\f1  (number of circles in cluster).\
	\'95	CSVs of raw and filtered clusters in some scripts.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f2\b \cf2 Key knobs (clustering):
\f1\b0 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 CLUSTER_EPS_M
\f1  (metres; how close circles must be)\
	\'95	
\f3 CLUSTER_GAP_S
\f1  (seconds; temporal continuity)\
	\'95	
\f3 MIN_CLUSTER_SIZE
\f1  (typ. 3\'965)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 4) Overlay script (current: v1j)
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Purpose:
\f1\b0 \cf2  run 
\f2\b \cf2 both
\f1\b0 \cf2  detectors, apply 
\f2\b \cf2 guardrails
\f1\b0 \cf2  to circles, cluster circles, and plot all in one map.\
	\'95	
\f2\b \cf2 What it shows:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Track (green line)\
	\'95	
\f2\b Circles
\f1\b0  (green \uc0\u10005 ) after guardrails\
	\'95	
\f2\b Circle clusters
\f1\b0  (black \uc0\u10005 ) sized by 
\f3 n
\f1  (\uc0\u8805  
\f3 MIN_CLUSTER_SIZE
\f1 )\
	\'95	
\f2\b Altitude clusters
\f1\b0  (orange \uc0\u10005 ) labeled T#\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 What it writes:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 outputs/overlay_debug_*.txt
\f1  (cadence, counts, parameter echo)\
	\'95	(Some versions also export cluster CSVs; easy to add if desired.)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f2\b \cf2 Why black \uc0\u10005  disappeared sometimes:
\f1\b0 \cf2  strict guardrails + 
\f3 \cf2 MIN_CLUSTER_SIZE=5
\f1 \cf2  cut many clusters. Loosening to 
\f2\b \cf2 turn 4\'9620\'b0/s
\f1\b0 \cf2 , 
\f2\b \cf2 radius 30\'96600 m
\f1\b0 \cf2 , 
\f2\b \cf2 n\uc0\u8805 3
\f1\b0 \cf2  restored counts in earlier runs.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 5) Compare script (current: v2e)
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Purpose:
\f1\b0 \cf2  run both detectors and 
\f2\b \cf2 compare
\f1\b0 \cf2  altitude clusters to circle clusters.\
	\'95	
\f2\b \cf2 How it matches:
\f1\b0 \cf2  nearest circle cluster to each altitude cluster by great-circle distance (and optional time overlap/gap).\
	\'95	
\f2\b \cf2 Outputs:
\f1\b0 \cf2 \
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 outputs/compare_raw_*.csv
\f1  and/or 
\f3 compare_filtered_*.csv
\f1 \
	\'95	Exports cluster summaries for sanity checking.\
\
\pard\tx860\tx1420\tx1980\tx2540\tx3100\tx3660\tx4220\tx4780\tx5340\tx5900\tx6460\tx7020\li300\sl324\slmult1\partightenfactor0
\cf2 Since 
\f2\b compare
\f1\b0  also runs circle detection internally, guardrail changes must be made 
\f2\b here too
\f1\b0  for consistency with overlay.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 6) Enrichment tool (standalone)
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 compare_enrich_clusters_v1.py
\f1\b0 \cf2 : reads the latest 
\f3 altitude_clusters_*.csv
\f1  and 
\f3 circles_clusters_*.csv
\f1 , computes matches, and 
\f2\b \cf2 writes enriched CSVs
\f1\b0 \cf2  that include 
\f3 match_cluster_id
\f1  and 
\f3 match_dist_m
\f1  on both sides.\
Useful if you want 
\f3 match_cluster_id
\f1  
\f5\i \cf2 inside
\f1\i0 \cf2  each cluster table, not only in the compare CSV.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs44 \cf2 Current defaults we\'92ve converged on (recommended)
\f1\b0\fs28 \cf2 \
\
You can run tighter or looser; these worked well to get ~15\'9620 solid circle clusters on your big triangle:\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Circles guardrails
\f1\b0 \cf2 :\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 TURN_MIN_DEG_S = 4.0
\f1 \
	\'95	
\f3 TURN_MAX_DEG_S = 20.0
\f1 \
	\'95	
\f3 RADIUS_MIN_M = 30.0
\f1 \
	\'95	
\f3 RADIUS_MAX_M = 600.0
\f1 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Clustering
\f1\b0 \cf2 :\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 CLUSTER_EPS_M = 1500.0
\f1  (1.5 km)\
	\'95	
\f3 CLUSTER_GAP_S = 900.0
\f1  (15 min)\
	\'95	
\f3 MIN_CLUSTER_SIZE = 3\'965
\f1  (start at 3 for more, 5 for stricter)\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Altitude
\f1\b0 \cf2 :\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 A_SMOOTH_S = 9.0
\f1 , 
\f3 A_MIN_RATE_MPS = 0.5
\f1 \
	\'95	
\f3 A_MIN_DUR_S = 60.0
\f1 , 
\f3 A_MIN_GAIN_M = 60.0
\f1 \
	\'95	
\f3 A_ALT_DROP_M = 180.0
\f1 , 
\f3 A_ALT_DROP_FRAC = 0.30
\f1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs44 \cf2 Typical workflow (what you\'92re doing now)
\f1\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f6 \cf2 	1.	
\f2\b Overlay (v1j)
\f1\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Runs both detectors, applies circle guardrails, clusters circles, plots everything.\
	\'95	Check bottom-left footer + debug txt for counts.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f6 \cf2 	2.	
\f2\b Compare (v2e)
\f1\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Runs both detectors and outputs matchings (alt vs circle clusters).\
	\'95	Sanity-check distance and overlaps; tweak 
\f3 MATCH_EPS_M
\f1  / 
\f3 MIN_CLUSTER_SIZE
\f1  if needed.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f6 \cf2 	3.	
\f2\b (Optional)
\f1\b0  Run 
\f2\b enrichment
\f1\b0  tool to inject 
\f3 match_cluster_id
\f1  back into cluster CSVs for downstream use.\

\f6 	4.	
\f2\b Versioning workflow
\f1\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 drafts/
\f1  = local scratch; ignored by Git.\
	\'95	
\f2\b Promote
\f1\b0  a draft \uc0\u8594  copy to main filename (overlay/compare/altitude/circles) and commit.\
	\'95	Park older working versions in 
\f3 archive/
\f1  and commit.\
	\'95	Use short, descriptive commit messages (you\'92ve been doing great here).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs44 \cf2 Lessons we\'92ve locked in
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Guardrails 
\f2\b \cf2 matter
\f1\b0 \cf2  with 3 s/fix cadence. Tight values can silently zero circles.\
	\'95	Confusion between 
\f2\b \cf2 green \uc0\u10005 
\f1\b0 \cf2  (circles) and 
\f2\b \cf2 black \uc0\u10005 
\f1\b0 \cf2  (cluster centers) went away once we echoed 
\f5\i \cf2 pre/post-guardrail
\f1\i0 \cf2  counts and 
\f3 MIN_CLUSTER_SIZE
\f1 .\
	\'95	
\f2\b \cf2 Altitude continuity / valley merge
\f1\b0 \cf2  is key for \'93monster thermals\'94 and aligns well with how you fly.\
	\'95	
\f2\b \cf2 Distance-only matching
\f1\b0 \cf2  is OK to start; adding mild time gating avoids cross-leg mismatches.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs44 \cf2 Good next steps (when you\'92re ready)
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Show cluster size on plot
\f1\b0 \cf2  (label black \uc0\u10005  with 
\f3 n
\f1 ).\
	\'95	
\f2\b \cf2 Export circle cluster CSV
\f1\b0 \cf2  from overlay (cluster_id, n, center, time span) every run.\
	\'95	
\f2\b \cf2 Parameter banner
\f1\b0 \cf2  printed at the top of every script run (so screenshots carry the tuning).\
	\'95	
\f2\b \cf2 Optional
\f1\b0 \cf2 : run circle detection with 
\f2\b \cf2 adaptive arc bins
\f1\b0 \cf2  (e.g., emit every additional 360\'b0 while one-sidedness holds) to better represent multiple circles in the same climb.\
	\'95	
\f2\b \cf2 Later
\f1\b0 \cf2 : unify IDs across altitude/circle/compare so a single \'93thermal ID\'94 flows through all outputs.\
\
If you want, I can push a tiny overlay tweak that (a) prints the parameter banner, and (b) labels black \uc0\u10005  with 
\f3 n
\f1  while also exporting a 
\f3 circle_clusters_filtered_*.csv
\f1  automatically.\
\
NEW SUMMARY\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0
\cf2 Perfect \'97 let\'92s lock in the summary of what you\'92ve built so far. I\'92ll break it into categories so you\'92ve got a clear map of the repo.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs44 \cf2 \uc0\u55358 \u57014  Glider Thermal Analysis \'97 Script Summary (so far)
\f1\b0\fs28 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 1. Core Detectors
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 altitude_gain_v3g.py (and earlier v1\'96v3f in drafts)
\f1\b0 \cf2 \
Detects climbs purely from altitude gains.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Filters noise with smoothing and valley-drop thresholds.\
	\'95	Groups consecutive climb segments into thermals using temporal & altitude continuity.\
	\'95	Outputs CSVs of altitude clusters (gain, duration, average climb rate, coordinates).\
	\'95	Plots 
\f2\b side view
\f1\b0  (altitude vs. time) and 
\f2\b map view
\f1\b0  (thermal positions).\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 circles_detector_v2.py (and earlier circles_clean/core/export)
\f1\b0 \cf2 \
Detects circling behavior (thermal turns) from heading changes.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Guardrails for turn rate (deg/sec), circle radius (m), and one-sidedness (avoid snake wiggles).\
	\'95	Clusters nearby circles into thermals with DBSCAN-style spatial/temporal grouping.\
	\'95	Exports circle clusters with counts, coordinates, and timing.\
	\'95	Plots 
\f2\b map view
\f1\b0  with green \uc0\u10010  (circles) and black \u10005  (clusters).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 2. Overlay & Compare
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 overlay_circles_altitude_v1k.py
\f1\b0 \cf2 \
Puts altitude clusters and circle clusters on the 
\f2\b \cf2 same map plot
\f1\b0 \cf2 .\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Orange \uc0\u10005  for altitude clusters (
\f3 T1, T2\'85
\f1 ).\
	\'95	Black \uc0\u10005  with counts for circle clusters.\
	\'95	Parameter banner printed at runtime (so tuning context is visible).\
	\'95	Auto-exports 
\f3 circle_clusters_filtered_*.csv
\f1  and enriched altitude CSVs.\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 compare_circles_altitude_v2f.py
\f1\b0 \cf2 \
Compares outputs of both detectors.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Tables with cluster ID, metrics (gain, rate, size, duration), and matches.\
	\'95	Highlights where altitude and circle detection agree or diverge.\
	\'95	Exported CSVs for detailed inspection.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 3. Matching Logic
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 match_clusters_strict_v1c.py
\f1\b0 \cf2 \
One-to-one matching between circle and altitude clusters.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Uses thresholds: spatial (EPS_M), overlap fraction, time gaps.\
	\'95	Produces matched tables with IDs and differences (gain, rate, duration).\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 match_clusters_many_to_one_v1.py
\f1\b0 \cf2 \
Looser scheme \uc0\u8594  multiple circles can match one altitude cluster.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Useful where thermalling is fragmented into partial circles.\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 match_alt_to_many_v1.py
\f1\b0 \cf2 \
Symmetric scheme \uc0\u8594  one altitude cluster can match multiple circle clusters.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Useful where drift splits altitude climb into multiple circle groupings.\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 compare_matches_v1c.py
\f1\b0 \cf2 \
Summarizes all match variants (strict, many\uc0\u8594 one, alt\u8594 many) in one place.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Prints aligned tables with cluster size (
\f3 c_n
\f1 , 
\f3 a_n
\f1 ), gains, rates, gaps.\
	\'95	Exports CSVs for recordkeeping.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 4. Tools & Utilities
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 igc_utils.py
\f1\b0 \cf2 \
Shared helper functions: parse IGC B-records, detect tow, compute derived values.\
	\'95	
\f2\b \cf2 print_table_v3.py
\f1\b0 \cf2 \
Nicely formats CSV cluster tables to console.\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Aligns columns, one decimal place.\
	\'95	Handles both altitude and circle enriched tables.\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 summarize_matches_v1.py
\f1\b0 \cf2 \
Aggregates match results, provides top-level summaries.\
	\'95	
\f2\b \cf2 check_total_climb_v1.py
\f1\b0 \cf2 \
Cross-checks whether detected climbs sum to the theoretical requirement (~25,000m for a 1000km 40:1 flight).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 5. Batch & Config
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 tuning_params_configurator_v1.py
\f1\b0 \cf2 \
Interactive prompt for all tuning parameters (circle, altitude, match).\
\pard\tqr\tx500\tx660\li660\fi-400\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Saves to 
\f3 config/tuning_params.csv
\f1 .\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 tuning_loader.py
\f1\b0 \cf2 \
Utility to load the CSV and override globals in scripts.\
	\'95	
\f2\b \cf2 apply_tuning_patches_v1.py
\f1\b0 \cf2 \
Auto-injects tuning loader into existing scripts (overwrites originals with backups).\
	\'95	
\f2\b \cf2 apply_tuning_patches_v2_emit_new.py
\f1\b0 \cf2 \
Safer patcher \uc0\u8594  emits 
\f3 *_patched.py
\f1  versions. Originals untouched.\
	\'95	
\f2\b \cf2 run_patcher.zsh
\f1\b0 \cf2 \
Zsh wrapper \uc0\u8594  patches all relevant files in one command, skips already 
\f3 _patched.py
\f1 .\
	\'95	
\f2\b \cf2 batch_match_igc_v1.py
\f1\b0 \cf2 \
Batch processor: for each 
\f3 .igc
\f1  in 
\f3 ./igc/
\f1 , gathers enriched per-IGC circle/altitude CSVs, runs matching, and produces a master CSV with coordinates/metrics.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 6. Repo Organization
\f1\b0\fs28 \cf2 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Drafts
\f1\b0 \cf2 : iterative trial versions you want to keep under version control.\
	\'95	
\f2\b \cf2 Archive
\f1\b0 \cf2 : stable-but-old variants (kept for reference).\
	\'95	
\f2\b \cf2 Cleanup
\f1\b0 \cf2 : many superseded versions removed to reduce clutter.\
	\'95	
\f2\b \cf2 Active
\f1\b0 \cf2 : latest versions live in root (
\f3 overlay
\f1 , 
\f3 compare
\f1 , 
\f3 altitude_gain_v3g.py
\f1 , 
\f3 circles_detector_v2.py
\f1 , etc.).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\uc0\u55357 \u56393  This gives you:\
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f2\b \cf2 Altitude detector
\f1\b0 \cf2  view (side & map).\
	\'95	
\f2\b \cf2 Circle detector
\f1\b0 \cf2  view (map).\
	\'95	
\f2\b \cf2 Overlay
\f1\b0 \cf2  (both together).\
	\'95	
\f2\b \cf2 Compare/match
\f1\b0 \cf2  (tables + CSVs).\
	\'95	
\f2\b \cf2 Batch mode
\f1\b0 \cf2  (across multiple IGCs).\
	\'95	
\f2\b \cf2 Config/patching system
\f1\b0 \cf2  (for tuning all thresholds centrally).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \
\uc0\u11835 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\fs28 \cf2 \
\uc0\u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488 \
\uc0\u9474    IGC(s)    \u9474    e.g. ./igc/2020-11-08 Lumpy Paterson 108645.igc\
\uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9516 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 \
      \uc0\u9474   parse + derive + tow exclusion (shared)\
      \uc0\u9474 \
      \uc0\u9660 \
\uc0\u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488               \u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488 \
\uc0\u9474  altitude_gain_v3g \u9474               \u9474  circles_detector_v2  \u9474 \
\uc0\u9474   (altitude-only)  \u9474               \u9474   (circles-only)      \u9474 \
\uc0\u9474  - finds climbs    \u9474               \u9474  - finds 360\'b0 turns   \u9474 \
\uc0\u9474  - clusters peaks  \u9474               \u9474  - clusters circles   \u9474 \
\uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9516 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496               \u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9516 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 \
         \uc0\u9474                                      \u9474 \
         \uc0\u9474  writes per-IGC enriched CSVs        \u9474 \
         \uc0\u9474                                      \u9474 \
         \uc0\u9660                                      \u9660 \
   outputs/<base>_                     outputs/<base>_\
   altitude_clusters_enriched_*.csv    circle_clusters_enriched_*.csv\
   (cluster_id, lat, lon, start/end,   (cluster_id, lat, lon, start/end,\
    n, gain_m, avg_rate_mps, \'85)         n, gain_m?, avg_rate_mps?, \'85)\
         \uc0\u9474                                      \u9474 \
         \uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9516 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 \
                        \uc0\u9474 \
                        \uc0\u9660 \
              \uc0\u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488 \
              \uc0\u9474  overlay_circles_\'85    \u9474   (map: orange \u10005  = altitude, black \u10005  = circles)\
              \uc0\u9474   - plots both        \u9474   (labels: T# and circle n, offset to avoid overlap)\
              \uc0\u9474   - prints param banner\
              \uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 \
                        \uc0\u9474 \
                        \uc0\u9474  optional visual sanity check\
                        \uc0\u9660 \
              \uc0\u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488 \
              \uc0\u9474  match_* (3 variants)          \u9474   strict / many\u8594 one / alt\u8594 many\
              \uc0\u9474  - EPS_M, MIN_OVL_FRAC,        \u9474   spatial + temporal overlap/gap\
              \uc0\u9474    MAX_TIME_GAP_S              \u9474 \
              \uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9516 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 \
                          \uc0\u9474  writes matched CSVs\
                          \uc0\u9660 \
        outputs/matched_clusters_*.csv\
        outputs/matched_clusters_many_to_one_*.csv\
        outputs/matched_alt_to_many_*.csv\
                          \uc0\u9474 \
                          \uc0\u9660 \
              \uc0\u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488 \
              \uc0\u9474  compare_matches_v1c           \u9474   (stacks all match modes)\
              \uc0\u9474  - prints aligned table incl.  \u9474   c_n (circle size) & a_n (alt size)\
              \uc0\u9474  - writes outputs/compare_*.csv\u9474 \
              \uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 \
                          \uc0\u9474 \
                          \uc0\u9660 \
              \uc0\u9484 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9488 \
              \uc0\u9474  batch_match_igc_v1            \u9474   (multi-IGC)\
              \uc0\u9474  - defaults to ./igc/          \u9474 \
              \uc0\u9474  - groups per-IGC enriched,    \u9474 \
              \uc0\u9474    matches, and appends rows   \u9474 \
              \uc0\u9474  - writes outputs/batch_*.csv  \u9474 \
              \uc0\u9492 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9496 }